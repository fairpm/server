(()=>{"use strict";var e={n:t=>{var s=t&&t.__esModule?()=>t.default:()=>t;return e.d(s,{a:s}),s},d:(t,s)=>{for(var r in s)e.o(s,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:s[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};const t=window.wp.plugins,s=window.wp.i18n,r=window.wp.editPost,n=window.wp.components,o=window.wp.editor,a=window.wp.data,i=window.wp.element,l="unlisted",p=window.wp.a11y,u=window.wp.coreData,c=window.wp.apiFetch;var d=e.n(c);const g=()=>{},w=window.ReactJSXRuntime,h={hasError:!1,isSubmitted:!1,isSubmitting:!1,message:null,reasonList:[]},m=(e,t)=>{const s={hasError:!1,isSubmitted:!1,isSubmitting:!1,message:null};switch(t.status){case"NOTE_SENT":return{...e,...s,isSubmitting:!0};case"NOTE_RECIEVED":return{...e,...s,isSubmitted:!0};case"REASONS_RECIEVED":return{...e,...s,reasonList:t.reasonList};case"ERROR":return{...e,...s,hasError:!0,message:t.message};default:return e}},_=({onClose:e,onSubmit:t})=>{const r=(0,a.useSelect)((e=>{const t=e(o.store).getCurrentPostId(),s=e(o.store).getCurrentPostType(),{rest_base:r}=e(u.store).getPostType(s);return`/wporg/v1/${r}/${t}/internal-notes`})),[l,c]=(0,i.useReducer)(m,h),[_,b]=(0,i.useState)(""),[S,x]=(0,i.useState)(""),j=(0,i.useRef)();(0,i.useEffect)((()=>{(({onSuccess:e=g,onFailure:t=g})=>{d()({path:"/wp/v2/wporg-pattern-flag-reason"}).then((t=>{const s=t.sort(((e,t)=>{switch(!0){case e.slug<t.slug:return-1;case e.slug>t.slug:return 1;default:return 0}})).map((e=>({label:e.name,value:e.id+""})));e(s)})).catch(t)})({onSuccess:(e=[])=>{c({status:"REASONS_RECIEVED",reasonList:e})},onFailure:e=>{c({status:"ERROR",message:e.message})}})}),[]);const f=(0,s.__)("The pattern has been unlisted, and your internal note has been saved.","wporg-patterns"),E=()=>{e()};return(0,w.jsx)(n.Modal,{title:(0,s.__)("Unlist this pattern","wporg-patterns"),onRequestClose:E,className:"wporg-patterns-unlist__modal",children:(0,w.jsx)("div",{ref:j,children:l.isSubmitted?(0,w.jsx)("p",{children:f}):(0,w.jsxs)("form",{onSubmit:e=>{if(e.preventDefault(),l.isSubmitted||l.isSubmitting)return;if(!_)return void c({status:"ERROR",message:(0,s.__)("Please select a reason.","wporg-patterns")});const n=l.reasonList.find((({value:e})=>e===_));c({status:"NOTE_SENT"}),(({url:e,note:t,onSuccess:s=g,onFailure:r=g})=>{d()({path:e,method:"POST",data:{excerpt:t}}).then(s).catch(r)})({url:r,note:S?`UNLISTED: ${n.label} — ${S}`:`UNLISTED: ${n.label}`,onSuccess:()=>{"function"==typeof t&&t(_),c({status:"NOTE_RECIEVED"}),(0,p.speak)(f),j.current.closest('[role="dialog"]').focus()},onFailure:e=>{c({status:"ERROR",message:e.message}),(0,p.speak)((0,s.sprintf)(/* translators: %s: Error message. */ /* translators: %s: Error message. */
(0,s.__)("Error: %s","wporg-patterns"),e.message))}})},children:[l.reasonList.length?(0,w.jsx)(n.RadioControl,{className:"wporg-patterns-unlist__reasons",label:(0,s.__)("Please choose a reason:","wporg-patterns"),help:(0,s.__)("The reason chosen will be used to show a message to the pattern author.","wporg-patterns"),selected:_,options:l.reasonList,onChange:b,required:!0}):(0,w.jsx)(n.Spinner,{}),(0,w.jsx)(n.TextareaControl,{label:(0,s.__)("Please provide internal details","wporg-patterns"),help:(0,s.__)("This note will only be seen by other admins and moderators.","wporg-patterns"),value:S,onChange:x}),l.hasError&&(0,w.jsx)("div",{className:"notice notice-large notice-alt notice-error",children:l.message}),(0,w.jsxs)("div",{className:"wporg-patterns-unlist__actions",children:[(0,w.jsx)(n.Button,{isSecondary:!0,onClick:E,children:(0,s.__)("Cancel","wporg-patterns")}),(0,w.jsx)(n.Button,{type:"submit",isBusy:l.isSubmitting,isPrimary:!0,children:l.isSubmitting?(0,s.__)("Submitting …","wporg-patterns"):(0,s.__)("Unlist Pattern","wporg-patterns")})]})]})})})},b=window.wp.notices,S=()=>{const e=(0,a.useSelect)((e=>e(o.store).getCurrentPostAttribute("status")),[]),{createNotice:t,removeNotice:r}=(0,a.useDispatch)(b.store),n="unlisted-pattern-notice";return(0,i.useEffect)((()=>{e===l?t("warning",(0,s.__)("This pattern is unlisted. It will not appear in the public pattern directory.","wporg-patterns"),{id:n,isDismissible:!1}):r(n)}),[e]),null},x=()=>{const e=(0,a.useSelect)((e=>e(o.store).getCurrentPost().status)),{editPost:t,savePost:p}=(0,a.useDispatch)(o.store),[u,c]=(0,i.useState)(!1),d=e===l?"wporg-patterns-unlist-notice":"wporg-patterns-unlist-button";return(0,w.jsxs)(r.PluginPostStatusInfo,{className:d,children:[e!==l?(0,w.jsxs)(w.Fragment,{children:[(0,w.jsx)(n.Button,{onClick:()=>c(!0),isSecondary:!0,children:(0,s.__)("Unlist","wporg-patterns")}),(0,w.jsx)("small",{children:(0,s.__)("Remove from the pattern directory","wporg-patterns")})]}):(0,w.jsxs)(w.Fragment,{children:[(0,w.jsx)("h3",{children:(0,s.__)("Unlisted","wporg-patterns")}),(0,w.jsx)("small",{children:(0,s.__)("Use the Publish button to re-list this pattern. Note: This overrides the status settings shown above.","wporg-patterns")})]}),u&&(0,w.jsx)(_,{onSubmit:e=>{t({status:l,"wporg-pattern-flag-reason":[e]}),p()},onClose:()=>c(!1)})]})},j="wpop_keywords",f="wpop_description",E="wpop_locale",v=window.wporgLocaleData||{},y=[];for(const[e,t]of Object.entries(v))y.push({value:e,label:t});const C=()=>{const{editPost:e}=(0,a.useDispatch)("core/editor"),{description:t,keywords:i,locale:l,meta:p,title:u}=(0,a.useSelect)((e=>{const{getEditedPostAttribute:t}=e(o.store),s=t("meta")||{};return{description:s[f],keywords:s[j].split(", ").filter((e=>e.length)),locale:s[E],meta:s,title:t("title")||""}}));return(0,w.jsxs)(r.PluginDocumentSettingPanel,{name:"wporg-pattern-details",title:(0,s.__)("Pattern Details","wporg-patterns"),icon:"nothing",children:[(0,w.jsx)(n.TextControl,{label:(0,s.__)("Title","wporg-patterns"),value:u,placeholder:(0,s.__)("Pattern title","wporg-patterns"),onChange:t=>e({title:t})},"title"),(0,w.jsx)(n.TextareaControl,{label:(0,s.__)("Description","wporg-patterns"),value:t,onChange:t=>e({meta:{...p,[f]:t}}),help:(0,s.__)("The description is used to help users of assistive technology understand the content of your pattern.","wporg-patterns")},"description"),(0,w.jsxs)("div",{children:[(0,w.jsx)("p",{children:(0,w.jsx)("strong",{children:(0,s.__)("Keywords","wporg-patterns")})}),(0,w.jsx)("p",{children:(0,s.__)("Keywords are words or short phrases that will help people find your pattern. There is a maximum of 10 keywords.","wporg-patterns")}),(0,w.jsx)(n.FormTokenField,{value:i||[],onChange:t=>{const s=t.join(", ");e({meta:{...p,[j]:s}})},maxLength:10,tokenizeOnSpace:!1})]}),(0,w.jsx)(n.ComboboxControl,{label:(0,s.__)("Language","wporg-patterns"),options:y,value:l,onChange:t=>e({meta:{...p,[E]:t}}),help:(0,s.__)("The language field is used to help users find patterns that were created in their preferred language.","wporg-patterns")},"locale")]})};(0,t.registerPlugin)("pattern-post-type",{render:()=>(0,w.jsxs)(w.Fragment,{children:[(0,w.jsx)(x,{}),(0,w.jsx)(S,{}),(0,w.jsx)(C,{})]})})})();
